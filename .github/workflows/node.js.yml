# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      # Matrix builds allow running the workflow across multiple versions of Node.js (18.x, 20.x, 22.x).
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Node.js version
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Step 3: Install dependencies
    - run: npm ci

    # Step 4: Build the project (if applicable)
    - run: npm run build --if-present

    # # Step 5: Run tests
    # - run: npm test

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build the Docker image
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true  # This means the image will be pushed to Docker Hub
        tags: ${{ secrets.DOCKER_USERNAME }}/distributed_sys:todo-v1.0
